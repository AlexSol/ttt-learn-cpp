// üß© Tic-Tac-Toe ‚Äî Stage 01: Basic Console Version
// –ì—Ä–∞ "–•—Ä–µ—Å—Ç–∏–∫–∏-–ù—É–ª–∏–∫–∏" –Ω–∞ –±–∞–∑–æ–≤–æ–º—É —Ä—ñ–≤–Ω—ñ C++
// –í—Å–µ –≤ –æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—ñ. –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ ‚Äî –Ω–∞–≤—á–∞–ª—å–Ω—ñ.

#include <iostream>  // –¥–ª—è std::cout, std::cin
using namespace std;

// 3x3 —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ
char board[3][3];

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –ø–æ–ª—è (—É—Å—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ = ' ')
void InitBoard()
{
    for (int row = 0; row < 3; ++row)
    {
        for (int col = 0; col < 3; ++col)
        {
            board[row][col] = ' ';
        }
    }
}

// –í–∏–≤—ñ–¥ —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è —É –∫–æ–Ω—Å–æ–ª—å
void PrintBoard()
{
    cout << "\n";
    for (int row = 0; row < 3; ++row)
    {
        for (int col = 0; col < 3; ++col)
        {
            cout << " " << board[row][col];
            if (col < 2) cout << " |";
        }
        cout << "\n";
        if (row < 2) cout << "---+---+---\n";
    }
    cout << "\n";
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—è—Ö, –≤–µ—Ä—Ç–∏–∫–∞–ª—è—Ö —Ç–∞ –¥—ñ–∞–≥–æ–Ω–∞–ª—è—Ö
bool CheckWin(char player)
{
    // –†—è–¥–∫–∏
    for (int row = 0; row < 3; ++row)
    {
        if (board[row][0] == player && board[row][1] == player && board[row][2] == player)
            return true;
    }

    // –°—Ç–æ–≤–ø—Ü—ñ
    for (int col = 0; col < 3; ++col)
    {
        if (board[0][col] == player && board[1][col] == player && board[2][col] == player)
            return true;
    }

    // –î—ñ–∞–≥–æ–Ω–∞–ª—ñ
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player)
        return true;

    if (board[0][2] == player && board[1][1] == player && board[2][0] == player)
        return true;

    return false;
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤—Å—ñ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ
bool IsBoardFull()
{
    for (int row = 0; row < 3; ++row)
        for (int col = 0; col < 3; ++col)
            if (board[row][col] == ' ')
                return false;
    return true;
}

int main()
{
    cout << "=== –•—Ä–µ—Å—Ç–∏–∫–∏-–ù—É–ª–∏–∫–∏ –Ω–∞ C++ ===\n";

    InitBoard();  // –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ

    char currentPlayer = 'X';

    while (true)
    {
        PrintBoard();

        int row, col;

        // –í–≤—ñ–¥ –≥—Ä–∞–≤—Ü—è
        cout << "–ì—Ä–∞–≤–µ—Ü—å " << currentPlayer << ", –≤–≤–µ–¥—ñ—Ç—å —Ä—è–¥–æ–∫ —ñ —Å—Ç–æ–≤–ø–µ—Ü—å (0-2): ";
        cin >> row >> col;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ —Ö–æ–¥—É
        if (row < 0 || row > 2 || col < 0 || col > 2)
        {
            cout << "–ù–µ–ø—Ä–∏–ø—É—Å—Ç–∏–º—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n";
            continue;
        }

        if (board[row][col] != ' ')
        {
            cout << "–ö–ª—ñ—Ç–∏–Ω–∫–∞ –≤–∂–µ –∑–∞–π–Ω—è—Ç–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.\n";
            continue;
        }

        // –†–æ–±–∏–º–æ —Ö—ñ–¥
        board[row][col] = currentPlayer;

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–º–æ–≥–∏
        if (CheckWin(currentPlayer))
        {
            PrintBoard();
            cout << "–ì—Ä–∞–≤–µ—Ü—å " << currentPlayer << " –ø–µ—Ä–µ–º—ñ–≥!\n";
            break;
        }

        // –ù—ñ—á–∏—è?
        if (IsBoardFull())
        {
            PrintBoard();
            cout << "–ù—ñ—á–∏—è!\n";
            break;
        }

        // –ó–º—ñ–Ω–∞ –≥—Ä–∞–≤—Ü—è
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }

    cout << "=== –ö—ñ–Ω–µ—Ü—å –≥—Ä–∏ ===\n";
    return 0;
}
